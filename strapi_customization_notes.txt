Changed tsconfig file to import images => https://graffino.com/til/how-to-import-images-in-typescript


rename app.example.tsx => app.ts for customization
https://docs.strapi.io/dev-docs/admin-panel-customization/options#tutorial-videos    # for minor customizations

For Extensions
https://docs.strapi.io/dev-docs/admin-panel-customization/extension

More info
https://blog.theodo.com/2022/06/4-ways-to-build-a-custom-strapi-admin-panel/

Admin Panel Api
https://docs.strapi.io/dev-docs/plugins/admin-panel-api#injection-zones-api


Final Realization: Create a plugin to add a Component



Creating a Plugin:
Step: 1
Prerequisite: npm install -g yalc
Create a plugin: npx @strapi/sdk-plugin init my-strapi-plugin

Step: 2 - Link plugin to project
Add the below code in the config/plugins.ts file, so the plugin is linked to the project
plugin_name:{ // use kebab casing here for the plugin name
    enabled:true,
    resolve:'./src/plugins/plugin_name'
}

Step 3

How to use Extensions?

Note:
Injection zones are defined in the register() lifecycle but components are injected in the bootstrap() lifecycle.

re use data on the same page with
// import { useCMEditViewDataManager } from '@strapi/helper-plugin';
Do not use strapi/helper-plugin
- The helper-plugin package is deprecated in Strapi 5 and is no longer directly supported. Strapi v5 has introduced significant changes, including updates to the plugin system and the removal of helper-plugin. Instead, Strapi encourages the use of the new Plugin SDK to build and migrate plugins.

try using: 
import { unstable_useContentManagerContext } from '@strapi/strapi/admin';
https://chatgpt.com/share/6732f6f9-c418-800d-8a4d-ebac8f9abdd8

Adding validation to collection types
https://github.com/strapi/strapi/issues/3309